// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String        @id @unique //matches auth id
  email       String        @unique
  firstName   String
  lastName    String
  file        File[]
  coverLetter CoverLetter[]
  resume      Resume[]
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String        @id @default(cuid())
  name         String
  uploadStatus UploadStatus  @default(PENDING)
  url          String?
  key          String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User?         @relation(fields: [userId], references: [id])
  userId       String?
  size         Int?
  coverLetters CoverLetter[]
  resumes      Resume[]
}

model CoverLetter {
  id        String   @id @default(cuid())
  text      String?
  name      String
  url       String?
  key       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  file      File?    @relation(fields: [fileId], references: [id])
  fileId    String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  resume    Resume?  @relation(fields: [resumeId], references: [id])
  resumeId  String?
}

model Resume {
  id          String        @id @default(cuid())
  text        String?
  name        String
  url         String?
  key         String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  file        File?         @relation(fields: [fileId], references: [id])
  fileId      String?
  user        User?         @relation(fields: [userId], references: [id])
  userId      String?
  CoverLetter CoverLetter[]
}
